var searchIndex = JSON.parse('{\
"minerva_voucher":{"doc":"This crate implements a compact CBOR-encoded voucher …","t":[13,13,13,13,13,13,13,13,13,8,4,13,13,8,13,3,4,0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,14,14,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,4,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12],"n":["CborFailure","CoseFailure","ES256","ES384","ES512","InvalidArgument","MalformedInput","MissingAttributes","PS256","Sign","SignatureAlgorithm","SigningFailed","UnexpectedCborType","Validate","ValidationFailed","Voucher","VoucherError","attr","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","debug","dump","eq","eq","eq","fmt","fmt","fmt","from","from","from","get","get_signature","get_signer_cert","init_psa_crypto","into","into","into","is_vch","is_vrq","iter","len","ne","ne","new_vch","new_vrq","remove","serialize","set","set_signer_cert","sign","sign","take","to_owned","to_sign","to_validate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","validate","vch","vrq","0","0","ATTR_ASSERTION","ATTR_CREATED_ON","ATTR_DOMAIN_CERT_REVOCATION_CHECKS","ATTR_EXPIRES_ON","ATTR_IDEVID_ISSUER","ATTR_LAST_RENEWAL_DATE","ATTR_NONCE","ATTR_PINNED_DOMAIN_CERT","ATTR_PINNED_DOMAIN_PUBK","ATTR_PINNED_DOMAIN_PUBK_SHA256","ATTR_PRIOR_SIGNED_VOUCHER_REQUEST","ATTR_PROXIMITY_REGISTRAR_CERT","ATTR_PROXIMITY_REGISTRAR_PUBK","ATTR_PROXIMITY_REGISTRAR_PUBK_SHA256","ATTR_SERIAL_NUMBER","Assertion","Assertion","Attr","AttrDisc","CreatedOn","DomainCertRevocationChecks","ExpiresOn","IdevidIssuer","LastRenewalDate","Logged","Nonce","PinnedDomainCert","PinnedDomainPubk","PinnedDomainPubkSha256","PriorSignedVoucherRequest","Proximity","ProximityRegistrarCert","ProximityRegistrarPubk","ProximityRegistrarPubkSha256","SerialNumber","Verified","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","disc","eq","eq","fmt","fmt","from","from","into","into","into_yang","ne","to_owned","to_owned","to_sid_disc","try_from","try_from","try_into","try_into","type_id","type_id","value","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Array","Bytes","CborType","CoseError","DecodingFailure","False","Integer","InvalidArgument","LibraryFailure","MalformedInput","Map","MissingHeader","Null","SignedInteger","SigningFailed","String","StringAsBytes","Tag","True","Undefined","UnexpectedHeaderValue","UnexpectedTag","UnexpectedType","Unimplemented","UnknownSignatureScheme","VerificationFailed","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","content_comp","content_comp_permissive","decode","eq","eq","fmt","fmt","from","from","into","into","ne","partial_cmp","serialize","sig_one_struct_bytes_from","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","0","0","1"],"q":["minerva_voucher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_voucher::VoucherError","","minerva_voucher::attr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_voucher::attr::Attr","","","","","","","","","","","","","","","minerva_voucher::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_voucher::debug::CborType","","","","","","","",""],"d":["","","","","","","","","","","An enum identifying supported signature algorithms. …","","","","","","","","","","","","","","","","","Prints internal representation of the voucher for …","","","","","","","","","","Returns a reference to the attribute in the voucher, if …","Returns a tuple containing references to the signature and …","Returns a reference to the signer certificate in the …","","","","","Returns <code>true</code> if the voucher is a “Voucher” instance.","Returns <code>true</code> if the voucher is a “Voucher Request” …","Gets an iterator that visits the attributes in the voucher.","Returns the number of attributes in the voucher.","","","Creates a new, empty “Voucher” instance.","Creates a new, empty “Voucher Request” instance.","Removes an attribute from the voucher. Returns whether the …","Encodes the voucher into CBOR.  Returns a CBOR byte string.","Adds an attribute to the voucher, replacing the existing …","Adds a singer certificate to the voucher. Returns a <code>mut</code> …","","…","Removes and returns the attribute in the voucher, if any, …","","Interfaces with meta data to be used in ECDSA based …","Interfaces with meta data to be used in ECDSA based …","","","Decodes a COSE-signed CBOR-encoded voucher.  Returns a …","","","","","","","","","…","Creates a voucher with a known list of attributes.","Creates a voucher request with a known list of attributes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors that can be returned from COSE functions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sorting for maps: RFC 7049 Section 3.9","","","Read the CBOR structure in bytes and return it as a …","","","","","","","","","","","Serialize a Cbor object. NB: if the object to be …","","","","","","","","","","","","","","","","",""],"i":[1,1,2,2,2,1,1,1,2,0,0,1,1,0,1,0,0,0,2,1,3,2,1,3,2,2,0,3,2,1,3,2,1,3,2,1,3,3,3,3,0,2,1,3,3,3,3,3,1,3,3,3,3,3,3,3,4,3,3,2,3,3,2,1,3,3,2,1,3,2,1,3,5,3,0,0,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,8,8,8,8,8,9,8,8,8,8,8,9,8,8,8,8,9,9,8,9,8,9,8,9,8,8,9,8,9,8,9,8,9,8,8,8,9,8,8,9,8,9,8,9,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,25,0,0,26,25,25,26,26,26,25,26,25,25,26,25,25,25,25,25,26,26,26,26,26,26,26,25,26,25,25,25,25,0,0,0,26,25,26,25,26,25,26,25,25,25,25,0,25,26,25,26,25,26,25,27,28,29,30,31,32,33,34,29],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["signaturealgorithm",4]],[[]],null,[[]],[[["signaturealgorithm",4]],["bool",15]],[[["vouchererror",4]],["bool",15]],[[["voucher",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["attrdisc",6]],["option",4,[["attr",4]]]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["usize",15]],[[["vouchererror",4]],["bool",15]],[[["voucher",3]],["bool",15]],[[]],[[]],[[["attrdisc",6]],["bool",15]],[[],["result",4,[["vec",3,[["u8",15]]],["vouchererror",4]]]],[[["attr",4]]],[[]],[[["signaturealgorithm",4]],["result",4,[["vouchererror",4]]]],[[["signaturealgorithm",4]],["result",4,[["vouchererror",4]]]],[[["attrdisc",6]],["option",4,[["attr",4]]]],[[]],[[["signaturealgorithm",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["option",4]],["result",4,[["vouchererror",4]]]],[[["option",4]],["result",4,[["vouchererror",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["assertion",4]],[[],["attr",4]],[[]],[[]],[[],["attrdisc",6]],[[["assertion",4]],["bool",15]],[[["attr",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["yang",4]],[[["attr",4]],["bool",15]],[[]],[[]],[[["attrdisc",6],["bool",15]],["option",4,[["u64",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["cbortype",4]],[[]],[[["cbortype",4]],["ordering",4]],[[],["bool",15]],[[],["bool",15]],[[],["result",4,[["cbortype",4],["cborerror",4]]]],[[["coseerror",4]],["bool",15]],[[["cbortype",4]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[["cbortype",4]],["bool",15]],[[["cbortype",4]],["option",4,[["ordering",4]]]],[[],["vec",3,[["u8",15],["global",3]]]],[[["btreemap",3]],["vec",3,[["u8",15]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null],"p":[[4,"VoucherError"],[4,"SignatureAlgorithm"],[3,"Voucher"],[8,"Sign"],[8,"Validate"],[13,"CborFailure"],[13,"CoseFailure"],[4,"Attr"],[4,"Assertion"],[13,"Assertion"],[13,"CreatedOn"],[13,"DomainCertRevocationChecks"],[13,"ExpiresOn"],[13,"IdevidIssuer"],[13,"LastRenewalDate"],[13,"Nonce"],[13,"PinnedDomainCert"],[13,"PinnedDomainPubk"],[13,"PinnedDomainPubkSha256"],[13,"PriorSignedVoucherRequest"],[13,"ProximityRegistrarCert"],[13,"ProximityRegistrarPubk"],[13,"ProximityRegistrarPubkSha256"],[13,"SerialNumber"],[4,"CborType"],[4,"CoseError"],[13,"Integer"],[13,"SignedInteger"],[13,"Tag"],[13,"Bytes"],[13,"String"],[13,"StringAsBytes"],[13,"Array"],[13,"Map"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};